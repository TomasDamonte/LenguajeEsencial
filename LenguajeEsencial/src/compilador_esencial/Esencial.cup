package compilador_esencial;

import java_cup.runtime.*;
import java.util.HashMap;
import java.util.Map;
import java.util.Iterator;
import java.util.ArrayList;

action code{:

	HashMap<String, Integer> Variables = new HashMap<String, Integer>();	
   	
   	public void Asignar(String id, Integer valor)
   	{
   		if(id == null || valor == null) return;
   		if(Variables.containsKey(id)) Variables.remove(id);   		
   		Variables.put(id,valor);   		
   	}   	
   	
   	public void Decrementar(String id)
   	{
   		if(id == null) return;
   		Variables.putIfAbsent(id, 0);
   		if(Variables.get(id) == 0) return;  		
   		Asignar(id, Variables.get(id) - 1);
   	}
   	
   	public void Incrementar(String id)
   	{
   		if(id == null) return;
   		Variables.putIfAbsent(id, 0);   		
   		Asignar(id, Variables.get(id) + 1);
   	}
   	
   	public void ImprimirVariables()
   	{   	
   		Iterator<String> it = Variables.keySet().iterator();
		while(it.hasNext())
		{
			String key = it.next();
			System.out.println(key + " = " + Variables.get(key));
		}		
   	}  	
   	
:}


/* Terminales sin atributo */
terminal MIENTRAS, DISTINTOCERO, HACER, FIN, PUNTOYCOMA, DECR, INCR, IGUAL;

/* Terminales con atributo asociado */
terminal Integer NUMERO;
terminal String ID;

/* No terminales sin atributo */
non terminal PROGRAMA, BUCLE, S, SENTENCIA;

/* No terminales con atributo asociado */

/* Axioma */
start with S;

/* Gramatica */

S ::= PROGRAMA {: ImprimirVariables(); :};

PROGRAMA ::= 
	SENTENCIA PROGRAMA	
	| BUCLE PROGRAMA 	
	| /* Lambda */;

BUCLE ::= 
	MIENTRAS ID DISTINTOCERO HACER PUNTOYCOMA PROGRAMA FIN PUNTOYCOMA;

SENTENCIA ::= 
			ID:i IGUAL NUMERO:n PUNTOYCOMA
				{: 	
					Asignar(i, n);			
				:}
			| INCR ID:i PUNTOYCOMA
				{: 
					Incrementar(i);
				:}
			| DECR ID:i PUNTOYCOMA
				{: 
					Decrementar(i);
				:}			
			| ID:i1 IGUAL ID:i2 PUNTOYCOMA
				{: 
					Asignar(i1, Variables.get(i2));
				:}		
			;
